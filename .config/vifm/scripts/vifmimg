#!/usr/bin/env bash
readonly ID_PREVIEW="preview"

# Preview an image file directly
function draw() {
  declare -p -A cmd=([action]=add [identifier]="$ID_PREVIEW" [scaler]="contain"
                     [x]="$2" [y]="$3" [width]="$4" [height]="$5" \
                     [path]="${PWD}/$6") \
    > "$FIFO_UEBERZUG"
}

function font_preview() {
  # if no preview found, generate one
  if [ ! -f "/tmp/ueberzug${PWD}/$6.png" ]; then
    fontpreview -i "$6" -o "/tmp/ueberzug${PWD}/$6.png"
  fi
  declare -p -A cmd=([action]=add [identifier]="$ID_PREVIEW"
                     [x]="$2" [y]="$3" [width]="$4" [height]="$5" \
                     [path]="/tmp/ueberzug${PWD}/$6.png") \
    > "$FIFO_UEBERZUG"
}

function pdf_preview() {
  # if no preview found, generate one
  if [ ! -f "/tmp/ueberzug/pdf/$6.jpg" ]; then
    pdftoppm -jpeg -singlefile "$6" "/tmp/ueberzug/pdf/$6"
  fi
  declare -p -A cmd=([action]=add [identifier]="$ID_PREVIEW"
                     [x]="$2" [y]="$3" [width]="$4" [height]="$5" \
                     [path]="/tmp/ueberzug/pdf/$6.jpg") \
    > "$FIFO_UEBERZUG"
}

function audio_preview() {
  # if no preview found, generate one
  if [ ! -f "/tmp/ueberzug${PWD}/$6.png" ]; then
    ffmpeg -i "$6" "/tmp/ueberzug${PWD}/$6.png" -y &> /dev/null
  fi
  declare -p -A cmd=([action]=add [identifier]="$ID_PREVIEW"
                     [x]="$2" [y]="$3" [width]="$4" [height]="$5" \
                     [path]="/tmp/ueberzug${PWD}/$6.png") \
    > "$FIFO_UEBERZUG"
}

function video_preview() {
  # if no preview found, generate one
  filename=$(printf '%s' "$6" | openssl sha1 | cut -d'=' -f2)
  if [ ! -f "/tmp/ueberzug/video/$filename.jpeg" ]; then
    ffmpegthumbnailer -i "$6" -o "/tmp/ueberzug/video/$filename.jpeg" -s 592 -q 7 -t 2
  fi
  declare -p -A cmd=([action]=add [identifier]="$ID_PREVIEW"
                     [x]="$2" [y]="$3" [width]="$4" [height]="$5" \
                     [path]="/tmp/ueberzug/video/$filename.jpeg") \
    > "$FIFO_UEBERZUG"
}

function epub_preview() {
    if [ ! -f "/tmp/ueberzug/epub/$6.png" ]; then
        gnome-epub-thumbnailer -s 384 "$6" "/tmp/ueberzug/epub/$6.png"
    fi
    declare -p -A cmd=([action]=add [identifier]="$ID_PREVIEW"
        [x]="$2" [y]="$3" [width]="$4" [height]="$5" \
        [path]="/tmp/ueberzug/epub/$6.png") \
        > "$FIFO_UEBERZUG"
}

function mobi_preview() {
    if [ ! -f "/tmp/ueberzug/mobi/$6.png" ]; then
        gnome-mobi-thumbnailer -s 384 "$6" "/tmp/ueberzug/mobi/$6.png"
    fi
    declare -p -A cmd=([action]=add [identifier]="$ID_PREVIEW"
        [x]="$2" [y]="$3" [width]="$4" [height]="$5" \
        [path]="/tmp/ueberzug/mobi/$6.png") \
        > "$FIFO_UEBERZUG"
}

function comic_preview() {
    if [ ! -f "/tmp/ueberzug/comic/$6.jpg" ]; then
        if [[ ${6##*\.} == "cbz" ]]; then
          unzip -qq -j "$6" "$(zipinfo -1 "$6" | sort | rg "(0{0,2})[012].jpg" --max-count=1)" -d /tmp/ueberzug/comic/
        elif [[ ${6##*\.} == "cbr" ]]; then
          unrar e "$6" "$(unrar vb "$6" | sort | rg "(0{0,2})[012].jpg" --max-count=1)" /tmp/ueberzug/comic/ -idq
        fi
        cd /tmp/ueberzug/comic/ || exit
        mv "$(find . -printf "%T@ %p\n" | head -n2 | tail -n1 | cut -d'/' -f2)" "/tmp/ueberzug/comic/$6.jpg"
    fi
    declare -p -A cmd=([action]=add [identifier]="$ID_PREVIEW"
        [x]="$2" [y]="$3" [width]="$4" [height]="$5" \
        [path]="/tmp/ueberzug/comic/$6.jpg") \
        > "$FIFO_UEBERZUG"
}

# clear preview image
function clear_preview() {
  declare -p -A cmd=([action]=remove [identifier]="$ID_PREVIEW") \
    > "$FIFO_UEBERZUG"
}

# Check all the dependencies that are needed to show all the file previews.
# The reason why we are sending a notification incase a dependency does not
# exist is because that is the easiest way to get the user's attention.
#dependencies=(ffmpeg ffmpegthumbnailer fontpreview pdftoppm gnome-epub-thumbnailer)
#for dependency in "${dependencies[@]}"; do
#    type -p "$dependency" &>/dev/null || {
#        notify-send "vifm" "Could not find '${dependency}', is it installed?"
#        exit 1
#    }
#done


# Make sure ueberzug's fifo exists
if [ -e "$FIFO_UEBERZUG" ]; then

for folder in {comic,epub,pdf,mobi,video}
do
  if [ ! -d /tmp/ueberzug/"$folder" ]; then
  mkdir -p /tmp/ueberzug/"$folder"
  fi
done

case "$1" in
  draw) draw "$@" ;;
  font) font_preview "$@" ;;
  pdf) pdf_preview "$@" ;;
  video) video_preview "$@" ;;
  clear) clear_preview ;;
  audio) audio_preview "$@" ;;
  epub) epub_preview "$@" ;;
  mobi) mobi_preview "$@" ;;
  comic) comic_preview "$@" ;;
esac
fi
